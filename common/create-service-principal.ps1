$Global:workingDir = (Resolve-Path .).Path;
. "$($Global:workingDir)\common\read-config.ps1";
. "$($Global:workingDir)\common\save-config.ps1";

try {
    readConfig;

    # Connect to Azure tenant with the admin credentials
    Write-Host "Login to Azure tenant with admin credentials to create service principal"
    Connect-AzAccount;
    
    # Create folder config\protected for storing secrets such as passwords and certificates (excluded from commits via .gitignore)
    New-Item -Path "$($Global:workingDir)\config\protected" -ItemType Directory -ErrorAction SilentlyContinue  | Out-Null;

    # Create a new Azure service principal which credentials will be used for running automated scripts
    # https://docs.microsoft.com/en-us/powershell/azure/create-azure-service-principal-azureps?view=azps-3.1.0
    Write-Host "Creating Azure service principal...";
    $servicePrincipal = New-AzADServicePrincipal -DisplayName $config.servicePrincipalName;
    $servicePrincipalPasswordAsSecureString  = $servicePrincipal.Secret;
    $tenantId = (Get-AzContext).Tenant.Id;
    Write-Host "Service principal $($config.servicePrincipalName) created in Azure tenant";

    # Save the service principal password generated by Azure in encrypted form to file config\protected\servicePrincipalPassword.enc
    $passwordFilePath = "$($Global:workingDir)\config\protected\servicePrincipalPassword.enc";
    $servicePrincipalPasswordAsSecureString | ConvertFrom-SecureString | Out-File $passwordFilePath;
    Write-Host "Service principal password generated by Azure saved to file $passwordFilePath";

    # Save tenant id to config.json file
    $config.tenantId = $tenantId;
    saveConfig;
    Write-Host "Azure tenant ID saved to config.json";
} catch {
    Write-Error $_;
}







